- name: 'Set fact: Package manager reinstall command (dnf)'
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_hashes | bool
  - ansible_distribution == "Fedora"
  tags:
  - CCE-27157-7
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010020
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_hashes

- name: 'Set fact: Package manager reinstall command (yum)'
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_hashes | bool
  - (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
  tags:
  - CCE-27157-7
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010020
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_hashes

- name: Read files with incorrect hash
  command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup --nomode --noghost --noconfig
  args:
    warn: false
  register: files_with_incorrect_hash
  changed_when: false
  failed_when: files_with_incorrect_hash.rc > 1
  check_mode: false
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_hashes | bool
  - (package_manager_reinstall_cmd is defined)
  tags:
  - CCE-27157-7
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010020
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_hashes

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'', ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'')
    | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_hashes | bool
  - files_with_incorrect_hash.stdout_lines is defined
  - (files_with_incorrect_hash.stdout_lines | length > 0)
  tags:
  - CCE-27157-7
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010020
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_hashes

- name: Reinstall packages of files with incorrect hash
  command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_hashes | bool
  - files_with_incorrect_hash.stdout_lines is defined
  - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0))
  tags:
  - CCE-27157-7
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010020
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_hashes

- name: Read list of files with incorrect permissions
  command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup
  args:
    warn: false
  register: files_with_incorrect_permissions
  failed_when: files_with_incorrect_permissions.rc > 1
  changed_when: false
  check_mode: false
  tags:
  - CCE-27209-6
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010010
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_permissions
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_permissions | bool

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'', ''^[.]+[M]+.* (\/.*)'', ''\1'') |
    map(''join'') | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_permissions | bool
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  tags:
  - CCE-27209-6
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010010
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_permissions

- name: Correct file permissions with RPM
  command: rpm --setperms '{{ item }}'
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - high_complexity | bool
  - high_severity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rpm_verify_permissions | bool
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  tags:
  - CCE-27209-6
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-010010
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-CM-6(d)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - PCI-DSS-Req-11.5
  - high_complexity
  - high_severity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  - rpm_verify_permissions

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-80120-9
  - NIST-800-171-3.1.12
  - dconf_gnome_remote_access_credential_prompt
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy
  when:
  - dconf_gnome_remote_access_credential_prompt | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool

- name: Require Credential Prompting for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: authentication-methods
    value: '[''vnc'']'
    create: true
    no_extra_spaces: true
  when:
  - dconf_gnome_remote_access_credential_prompt | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80120-9
  - NIST-800-171-3.1.12
  - dconf_gnome_remote_access_credential_prompt
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Prevent user modification of GNOME3 Credential Prompting for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/authentication-methods$
    line: /org/gnome/Vino/authentication-methods
    create: true
  when:
  - dconf_gnome_remote_access_credential_prompt | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80120-9
  - NIST-800-171-3.1.12
  - dconf_gnome_remote_access_credential_prompt
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Dconf Update
  command: dconf update
  when:
  - dconf_gnome_remote_access_credential_prompt | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80120-9
  - NIST-800-171-3.1.12
  - dconf_gnome_remote_access_credential_prompt
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-80121-7
  - NIST-800-171-3.1.13
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - dconf_gnome_remote_access_encryption
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy
  when:
  - dconf_gnome_remote_access_encryption | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool

- name: Require Encryption for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: require-encryption
    value: 'true'
    create: true
    no_extra_spaces: true
  when:
  - dconf_gnome_remote_access_encryption | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80121-7
  - NIST-800-171-3.1.13
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - dconf_gnome_remote_access_encryption
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Prevent user modification of GNOME3 Encryption for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/require-encryption$
    line: /org/gnome/Vino/require-encryption
    create: true
  when:
  - dconf_gnome_remote_access_encryption | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80121-7
  - NIST-800-171-3.1.13
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - dconf_gnome_remote_access_encryption
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Dconf Update
  command: dconf update
  when:
  - dconf_gnome_remote_access_encryption | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"gdm" in ansible_facts.packages'
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80121-7
  - NIST-800-171-3.1.13
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - dconf_gnome_remote_access_encryption
  - low_complexity
  - medium_disruption
  - medium_severity
  - no_reboot_needed
  - unknown_strategy

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-26989-4
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_gpgcheck_globally_activated
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy
  when:
  - ensure_gpgcheck_globally_activated | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ensure_gpgcheck_globally_activated | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - ansible_distribution == "Fedora"
  tags:
  - CCE-26989-4
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_gpgcheck_globally_activated
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - ensure_gpgcheck_globally_activated | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  tags:
  - CCE-26989-4
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_gpgcheck_globally_activated
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - ensure_gpgcheck_globally_activated | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - ansible_distribution == "Fedora"
  tags:
  - CCE-26989-4
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_gpgcheck_globally_activated
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-80347-8
  - DISA-STIG-RHEL-07-020060
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - ensure_gpgcheck_local_packages
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy
  when:
  - ensure_gpgcheck_local_packages | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ensure_gpgcheck_local_packages | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - ansible_distribution == "Fedora"
  tags:
  - CCE-80347-8
  - DISA-STIG-RHEL-07-020060
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - ensure_gpgcheck_local_packages
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ensure_gpgcheck_local_packages | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  tags:
  - CCE-80347-8
  - DISA-STIG-RHEL-07-020060
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - ensure_gpgcheck_local_packages
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ensure_gpgcheck_local_packages | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - unknown_strategy | bool
  - '"yum" in ansible_facts.packages'
  - ansible_distribution == "Fedora"
  tags:
  - CCE-80347-8
  - DISA-STIG-RHEL-07-020060
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - ensure_gpgcheck_local_packages
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - unknown_strategy

- name: Grep for yum repo section names
  shell: 'set -o pipefail

    grep -HEr ''^\[.+\]'' -r /etc/yum.repos.d/

    '
  register: repo_grep_results
  ignore_errors: true
  changed_when: false
  tags:
  - CCE-26876-3
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - enable_strategy
  - ensure_gpgcheck_never_disabled
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  when:
  - enable_strategy | bool
  - ensure_gpgcheck_never_disabled | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool

- name: Set gpgcheck=1 for each yum repo
  ini_file:
    path: '{{ item[0] }}'
    section: '{{ item[1] }}'
    option: gpgcheck
    value: '1'
    no_extra_spaces: true
  loop: '{{ repo_grep_results.stdout | regex_findall( ''(.+\.repo):\[(.+)\]\n?'' ) }}'
  tags:
  - CCE-26876-3
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - enable_strategy
  - ensure_gpgcheck_never_disabled
  - high_severity
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  when:
  - enable_strategy | bool
  - ensure_gpgcheck_never_disabled | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - CCE-26957-1
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_redhat_gpgkey_installed
  - high_severity
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  when:
  - ensure_redhat_gpgkey_installed | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool

- name: Read signatures in GPG key
  command: gpg --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  args:
    warn: false
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - CCE-26957-1
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_redhat_gpgkey_installed
  - high_severity
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  when:
  - ensure_redhat_gpgkey_installed | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool

- name: Set Fact - Installed GPG Fingerprints
  set_fact:
    gpg_installed_fingerprints: '{{ gpg_fingerprints.stdout | regex_findall(''^pub.*

      (?:^fpr[:]*)([0-9A-Fa-f]*)'', ''\1'') | list }}'
  tags:
  - CCE-26957-1
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_redhat_gpgkey_installed
  - high_severity
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  when:
  - ensure_redhat_gpgkey_installed | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - CCE-26957-1
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_redhat_gpgkey_installed
  - high_severity
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy
  when:
  - ensure_redhat_gpgkey_installed | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - ensure_redhat_gpgkey_installed | bool
  - high_severity | bool
  - medium_complexity | bool
  - medium_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - gpg_key_directory_permission.stat.mode <= '0755'
  - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_installed_fingerprints | length > 0
  - ansible_distribution == "RedHat"
  tags:
  - CCE-26957-1
  - CJIS-5.10.4.1
  - NIST-800-171-3.4.8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SI-7
  - PCI-DSS-Req-6.2
  - ensure_redhat_gpgkey_installed
  - high_severity
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - restrict_strategy

- name: Disable service debug-shell
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service debug-shell
    systemd:
      name: debug-shell.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"debug-shell.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80206-6
  - NIST-800-171-3.4.5
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_debug-shell_disabled

- name: Unit Socket Exists - debug-shell.socket
  command: systemctl list-unit-files debug-shell.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80206-6
  - NIST-800-171-3.4.5
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_debug-shell_disabled

- name: Disable socket debug-shell
  systemd:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-80206-6
  - NIST-800-171-3.4.5
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_debug-shell_disabled

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-80449-2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-6(a)
  - disable_ctrlaltdel_burstaction
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  when:
  - disable_ctrlaltdel_burstaction | bool
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool

- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
  when:
  - disable_ctrlaltdel_burstaction | bool
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - '"systemd" in ansible_facts.packages'
  tags:
  - CCE-80449-2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-6(a)
  - disable_ctrlaltdel_burstaction
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
    state: stopped
  when:
  - disable_ctrlaltdel_reboot | bool
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27511-5
  - DISA-STIG-RHEL-07-020230
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - disable_ctrlaltdel_reboot
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-27335-9
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-2(1)
  - grub2_disable_interactive_boot
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy
  when:
  - grub2_disable_interactive_boot | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - grub2_disable_interactive_boot | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - '"grub2-common" in ansible_facts.packages'
  tags:
  - CCE-27335-9
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-2(1)
  - grub2_disable_interactive_boot
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - grub2_disable_interactive_boot | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - '"grub2-common" in ansible_facts.packages'
  tags:
  - CCE-27335-9
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-2(1)
  - grub2_disable_interactive_boot
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - require_singleuser_auth | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27287-2
  - DISA-STIG-RHEL-07-010481
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-2
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - require_singleuser_auth
  - restrict_strategy

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    regexp: nullok
  when:
  - configure_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27286-4
  - CJIS-5.5.2
  - DISA-STIG-RHEL-07-010290
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - PCI-DSS-Req-8.2.3
  - configure_strategy
  - high_severity
  - low_complexity
  - medium_disruption
  - no_empty_passwords
  - no_reboot_needed

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    regexp: nullok
  when:
  - configure_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - medium_disruption | bool
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27286-4
  - CJIS-5.5.2
  - DISA-STIG-RHEL-07-010290
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - PCI-DSS-Req-8.2.3
  - configure_strategy
  - high_severity
  - low_complexity
  - medium_disruption
  - no_empty_passwords
  - no_reboot_needed

- name: Direct root Logins Not Allowed
  copy:
    dest: /etc/securetty
    content: ''
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27294-8
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-2
  - low_complexity
  - low_disruption
  - medium_severity
  - no_direct_root_logins
  - no_reboot_needed
  - restrict_strategy

- name: Restrict Serial Port Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ttyS[0-9]
    state: absent
  tags:
  - CCE-27268-2
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_serial_port_logins
  - restrict_strategy
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_serial_port_logins | bool
  - restrict_strategy | bool

- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
  - CCE-27318-5
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - securetty_root_login_console_only
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - securetty_root_login_console_only | bool

- name: Enable service auditd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service auditd
    service:
      name: auditd
      enabled: 'yes'
      state: started
      masked: 'no'
    when:
    - '"audit" in ansible_facts.packages'
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_auditd_enabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27407-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030000
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.1
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_auditd_enabled

- name: Gather the package facts
  package_facts:
    manager: auto
  tags:
  - CCE-27212-0
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-14(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - PCI-DSS-Req-10.3
  - grub2_audit_argument
  - low_disruption
  - medium_complexity
  - medium_severity
  - reboot_required
  - restrict_strategy
  when:
  - grub2_audit_argument | bool
  - low_disruption | bool
  - medium_complexity | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool

- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - grub2_audit_argument | bool
  - low_disruption | bool
  - medium_complexity | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"grub2-common" in ansible_facts.packages'
  tags:
  - CCE-27212-0
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-14(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - PCI-DSS-Req-10.3
  - grub2_audit_argument
  - low_disruption
  - medium_complexity
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=\w+
    replace: audit=1
  when:
  - grub2_audit_argument | bool
  - low_disruption | bool
  - medium_complexity | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"grub2-common" in ansible_facts.packages'
  - argcheck.rc == 0
  tags:
  - CCE-27212-0
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-14(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - PCI-DSS-Req-10.3
  - grub2_audit_argument
  - low_disruption
  - medium_complexity
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
  - grub2_audit_argument | bool
  - low_disruption | bool
  - medium_complexity | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"grub2-common" in ansible_facts.packages'
  - argcheck.rc != 0
  tags:
  - CCE-27212-0
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-14(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - PCI-DSS-Req-10.3
  - grub2_audit_argument
  - low_disruption
  - medium_complexity
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when:
  - grub2_audit_argument | bool
  - low_disruption | bool
  - medium_complexity | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"grub2-common" in ansible_facts.packages'
  tags:
  - CCE-27212-0
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-14(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - PCI-DSS-Req-10.3
  - grub2_audit_argument
  - low_disruption
  - medium_complexity
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Collect all files from /etc/audit/rules.d with .rules extension
  find:
    paths: /etc/audit/rules.d/
    patterns: '*.rules'
  register: find_rules_d
  when:
  - audit_rules_immutable | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27097-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-171-3.4.3
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.2
  - audit_rules_immutable
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Remove the -e option from all Audit config files
  lineinfile:
    path: '{{ item }}'
    regexp: ^\s*(?:-e)\s+.*$
    state: absent
  loop: '{{ find_rules_d.files | map(attribute=''path'') | list + [''/etc/audit/audit.rules''] }}'
  when:
  - audit_rules_immutable | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27097-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-171-3.4.3
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.2
  - audit_rules_immutable
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add Audit -e option into /etc/audit/rules.d/immutable.rules and /etc/audit/audit.rules
  lineinfile:
    path: '{{ item }}'
    create: true
    line: -e 2
  loop:
  - /etc/audit/audit.rules
  - /etc/audit/rules.d/immutable.rules
  when:
  - audit_rules_immutable | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27097-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-171-3.4.3
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.2
  - audit_rules_immutable
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key MAC-policy
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)MAC-policy$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use /etc/audit/rules.d/MAC-policy.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/MAC-policy.rules
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /etc/selinux/ in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/selinux/ -p wa -k MAC-policy
    create: true
    mode: '0640'
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /etc/selinux/ in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/selinux/ -p wa -k MAC-policy
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_mac_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27168-4
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.8
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_mac_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit mount tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_mount
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_mount.matched is defined and find_mount.matched == 0
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_mount.matched is defined and find_mount.matched > 0
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the mount rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the mount rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the mount rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the mount rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_media_export | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27447-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030740
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_media_export
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Remediate audit rules for network configuration for x86
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - sethostname
      - setdomainname
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b32_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - sethostname
      - setdomainname
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b32_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Remediate audit rules for network configuration for x86_64
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - sethostname
      - setdomainname
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b64_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - sethostname
      - setdomainname
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b64_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch == "b64"
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/issue already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/issue in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/issue already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/issue in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/issue.net already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/issue.net in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/issue.net already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/issue.net in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/hosts already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/hosts in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/hosts already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/hosts in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/sysconfig/network in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/sysconfig/network in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_networkconfig_modification | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27076-9
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_networkconfig_modification
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /var/run/utmp already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/var/run/utmp\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key session
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)session$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/session.rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/run/utmp in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/utmp -p wa -k session
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /var/run/utmp already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/var/run/utmp\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/run/utmp in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/utmp -p wa -k session
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /var/log/btmp already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/var/log/btmp\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key session
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)session$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/session.rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/log/btmp in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/btmp -p wa -k session
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /var/log/btmp already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/var/log/btmp\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/log/btmp in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/btmp -p wa -k session
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /var/log/wtmp already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/var/log/wtmp\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key session
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)session$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/session.rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/log/wtmp in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/wtmp -p wa -k session
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Check if watch rule for /var/log/wtmp already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/var/log/wtmp\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add watch rule for /var/log/wtmp in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/wtmp -p wa -k session
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_session_events | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27301-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_session_events
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*/etc/sudoers.*$
    patterns: '*.rules'
  register: find_audit_sysadmin_actions
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
  set_fact:
    all_sysadmin_actions_files:
    - /etc/audit/rules.d/actions.rules
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched == 0
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_sysadmin_actions_files:
    - '{{ find_audit_sysadmin_actions.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched > 0
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
  lineinfile:
    path: '{{ all_sysadmin_actions_files[0] }}'
    line: -w /etc/sudoers -p wa -k actions
    create: true
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
  lineinfile:
    path: '{{ all_sysadmin_actions_files[0] }}'
    line: -w /etc/sudoers.d/ -p wa -k actions
    create: true
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -w /etc/sudoers -p wa -k actions
    create: true
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -w /etc/sudoers.d/ -p wa -k actions
    create: true
  when:
  - audit_rules_sysadmin_actions | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27461-3
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030700
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(7)(b)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.2
  - PCI-DSS-Req-10.2.5.b
  - audit_rules_sysadmin_actions
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Collect all files from /etc/audit/rules.d with .rules extension
  find:
    paths: /etc/audit/rules.d/
    patterns: '*.rules'
  register: find_rules_d
  when:
  - audit_rules_system_shutdown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80997-0
  - DISA-STIG-RHEL-07-030010
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.4
  - NIST-800-53-AU-5(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-24
  - audit_rules_system_shutdown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Remove the -f option from all Audit config files
  lineinfile:
    path: '{{ item }}'
    regexp: ^\s*(?:-f)\s+.*$
    state: absent
  loop: '{{ find_rules_d.files | map(attribute=''path'') | list + [''/etc/audit/audit.rules''] }}'
  when:
  - audit_rules_system_shutdown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80997-0
  - DISA-STIG-RHEL-07-030010
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.4
  - NIST-800-53-AU-5(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-24
  - audit_rules_system_shutdown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Add Audit -f option into /etc/audit/rules.d/immutable.rules and /etc/audit/audit.rules
  lineinfile:
    path: '{{ item }}'
    create: true
    line: -f 2
  loop:
  - /etc/audit/audit.rules
  - /etc/audit/rules.d/immutable.rules
  when:
  - audit_rules_system_shutdown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80997-0
  - DISA-STIG-RHEL-07-030010
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.4
  - NIST-800-53-AU-5(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-24
  - audit_rules_system_shutdown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_group.matched is defined and find_group.matched == 0
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_group.matched is defined and find_group.matched > 0
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80433-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030871
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_group
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_usergroup_modification_gshadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80432-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030872
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_gshadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_opasswd.matched is defined and find_opasswd.matched == 0
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_opasswd.matched is defined and find_opasswd.matched > 0
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_usergroup_modification_opasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80430-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030874
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_opasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_passwd.matched is defined and find_passwd.matched == 0
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_passwd.matched is defined and find_passwd.matched > 0
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_usergroup_modification_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80435-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030870
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_shadow.matched is defined and find_shadow.matched == 0
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_shadow.matched is defined and find_shadow.matched > 0
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_usergroup_modification_shadow | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80431-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030873
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.5
  - audit_rules_usergroup_modification_shadow
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chmod.matched is defined and find_chmod.matched == 0
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chmod.matched is defined and find_chmod.matched > 0
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_chmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27339-1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030410
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chown.matched is defined and find_chown.matched == 0
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chown.matched is defined and find_chown.matched > 0
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_chown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27364-9
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030370
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_chown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchmod.matched is defined and find_fchmod.matched == 0
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchmod.matched is defined and find_fchmod.matched > 0
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchmod | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27393-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030420
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmod
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchmodat.matched is defined and find_fchmodat.matched == 0
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchmodat.matched is defined and find_fchmodat.matched > 0
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27388-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030430
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchmodat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchown.matched is defined and find_fchown.matched == 0
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchown.matched is defined and find_fchown.matched > 0
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27356-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030380
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fchownat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27387-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030400
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fchownat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27353-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030480
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_fsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27389-6
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030450
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_fsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lchown.matched is defined and find_lchown.matched == 0
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lchown.matched is defined and find_lchown.matched > 0
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lchown | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27083-5
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030390
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lchown
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lremovexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27410-0
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030490
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lremovexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_lsetxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27280-7
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030460
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_lsetxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_removexattr.matched is defined and find_removexattr.matched == 0
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_removexattr.matched is defined and find_removexattr.matched > 0
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_removexattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27367-2
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030470
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_removexattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_setxattr.matched is defined and find_setxattr.matched == 0
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_setxattr.matched is defined and find_setxattr.matched > 0
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_dac_modification_setxattr | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-27213-8
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030440
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.5
  - audit_rules_dac_modification_setxattr
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chcon.*$
    patterns: '*.rules'
  register: find_chcon
  when:
  - audit_rules_execution_chcon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80393-2
  - DISA-STIG-RHEL-07-030580
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_chcon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_execution_chcon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chcon.matched is defined and find_chcon.matched == 0
  tags:
  - CCE-80393-2
  - DISA-STIG-RHEL-07-030580
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_chcon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_execution_chcon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chcon.matched is defined and find_chcon.matched > 0
  tags:
  - CCE-80393-2
  - DISA-STIG-RHEL-07-030580
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_chcon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chcon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chcon -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_chcon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80393-2
  - DISA-STIG-RHEL-07-030580
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_chcon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chcon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chcon -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_chcon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80393-2
  - DISA-STIG-RHEL-07-030580
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_chcon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/restorecon.*$
    patterns: '*.rules'
  register: find_restorecon
  when:
  - audit_rules_execution_restorecon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80394-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_restorecon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_execution_restorecon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_restorecon.matched is defined and find_restorecon.matched == 0
  tags:
  - CCE-80394-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_restorecon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_execution_restorecon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_restorecon.matched is defined and find_restorecon.matched > 0
  tags:
  - CCE-80394-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_restorecon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the restorecon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/restorecon -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_restorecon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80394-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_restorecon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the restorecon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/restorecon -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_restorecon | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80394-0
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_restorecon
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/semanage.*$
    patterns: '*.rules'
  register: find_semanage
  when:
  - audit_rules_execution_semanage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80391-6
  - DISA-STIG-RHEL-07-030560
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_semanage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_execution_semanage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_semanage.matched is defined and find_semanage.matched == 0
  tags:
  - CCE-80391-6
  - DISA-STIG-RHEL-07-030560
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_semanage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_execution_semanage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_semanage.matched is defined and find_semanage.matched > 0
  tags:
  - CCE-80391-6
  - DISA-STIG-RHEL-07-030560
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_semanage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the semanage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/semanage -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_semanage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80391-6
  - DISA-STIG-RHEL-07-030560
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_semanage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the semanage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/semanage -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_semanage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80391-6
  - DISA-STIG-RHEL-07-030560
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_semanage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setsebool.*$
    patterns: '*.rules'
  register: find_setsebool
  when:
  - audit_rules_execution_setsebool | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80392-4
  - DISA-STIG-RHEL-07-030570
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_setsebool
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_execution_setsebool | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_setsebool.matched is defined and find_setsebool.matched == 0
  tags:
  - CCE-80392-4
  - DISA-STIG-RHEL-07-030570
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_setsebool
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_execution_setsebool | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_setsebool.matched is defined and find_setsebool.matched > 0
  tags:
  - CCE-80392-4
  - DISA-STIG-RHEL-07-030570
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_setsebool
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the setsebool rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setsebool -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_setsebool | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80392-4
  - DISA-STIG-RHEL-07-030570
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_setsebool
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the setsebool rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setsebool -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_execution_setsebool | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80392-4
  - DISA-STIG-RHEL-07-030570
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_execution_setsebool
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rename
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_rename.matched is defined and find_rename.matched == 0
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_rename.matched is defined and find_rename.matched > 0
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_rename | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80995-4
  - DISA-STIG-RHEL-07-030880
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rename
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_renameat
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_renameat.matched is defined and find_renameat.matched == 0
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_renameat.matched is defined and find_renameat.matched > 0
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_renameat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80413-8
  - DISA-STIG-RHEL-07-030890
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_renameat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit rmdir tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rmdir
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_rmdir.matched is defined and find_rmdir.matched == 0
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_rmdir.matched is defined and find_rmdir.matched > 0
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rmdir rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rmdir rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_rmdir | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80412-0
  - DISA-STIG-RHEL-07-030900
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_rmdir
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlink
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unlink.matched is defined and find_unlink.matched == 0
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unlink.matched is defined and find_unlink.matched > 0
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80996-2
  - DISA-STIG-RHEL-07-030910
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlink
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_file_deletion_events_unlinkat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80662-0
  - DISA-STIG-RHEL-07-030920
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_file_deletion_events_unlinkat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit creat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_creat
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_creat.matched is defined and find_creat.matched == 0
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_creat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_creat.matched is defined and find_creat.matched > 0
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the creat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the creat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the creat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the creat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80385-8
  - DISA-STIG-RHEL-07-030500
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_creat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80390-8
  - DISA-STIG-RHEL-07-030550
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_ftruncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_open.matched is defined and find_open.matched == 0
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_open.matched is defined and find_open.matched > 0
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80386-6
  - DISA-STIG-RHEL-07-030510
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80388-2
  - DISA-STIG-RHEL-07-030530
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_openat.matched is defined and find_openat.matched == 0
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_openat.matched is defined and find_openat.matched > 0
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_openat | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80387-4
  - DISA-STIG-RHEL-07-030520
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_openat
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_truncate.matched is defined and find_truncate.matched == 0
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_truncate.matched is defined and find_truncate.matched > 0
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80389-0
  - DISA-STIG-RHEL-07-030540
  - NIST-800-171-3.1.7
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.1
  - PCI-DSS-Req-10.2.4
  - audit_rules_unsuccessful_file_modification_truncate
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Set architecture for audit delete_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*delete_module.*$
    patterns: '*.rules'
  register: find_delete_module
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_delete_module.matched is defined and find_delete_module.matched == 0
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_delete_module.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_delete_module.matched is defined and find_delete_module.matched > 0
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the delete_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the delete_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the delete_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    create: true
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    create: true
  when:
  - audit_rules_kernel_module_loading_delete | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80415-3
  - DISA-STIG-RHEL-07-030830
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_delete
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Set architecture for audit init_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*init_module.*$
    patterns: '*.rules'
  register: find_init_module
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_init_module.matched is defined and find_init_module.matched == 0
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_init_module.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_init_module.matched is defined and find_init_module.matched > 0
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the init_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the init_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the init_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    create: true
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Inserts/replaces the init_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    create: true
  when:
  - audit_rules_kernel_module_loading_init | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch is defined and audit_arch == 'b64'
  tags:
  - CCE-80414-6
  - DISA-STIG-RHEL-07-030820
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.7
  - audit_rules_kernel_module_loading_init
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_faillock
  when:
  - audit_rules_login_events_faillock | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80383-3
  - DISA-STIG-RHEL-07-030610
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_faillock
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - audit_rules_login_events_faillock | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_faillock.matched is defined and find_faillock.matched == 0
  tags:
  - CCE-80383-3
  - DISA-STIG-RHEL-07-030610
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_faillock
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_login_events_faillock | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_faillock.matched is defined and find_faillock.matched > 0
  tags:
  - CCE-80383-3
  - DISA-STIG-RHEL-07-030610
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_faillock
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the faillock rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/faillock -p wa -k logins
    create: true
  when:
  - audit_rules_login_events_faillock | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80383-3
  - DISA-STIG-RHEL-07-030610
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_faillock
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/faillock -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_login_events_faillock | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80383-3
  - DISA-STIG-RHEL-07-030610
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_faillock
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_lastlog
  when:
  - audit_rules_login_events_lastlog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80384-1
  - DISA-STIG-RHEL-07-030620
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_lastlog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - audit_rules_login_events_lastlog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lastlog.matched is defined and find_lastlog.matched == 0
  tags:
  - CCE-80384-1
  - DISA-STIG-RHEL-07-030620
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_lastlog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_login_events_lastlog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_lastlog.matched is defined and find_lastlog.matched > 0
  tags:
  - CCE-80384-1
  - DISA-STIG-RHEL-07-030620
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_lastlog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lastlog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/lastlog -p wa -k logins
    create: true
  when:
  - audit_rules_login_events_lastlog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80384-1
  - DISA-STIG-RHEL-07-030620
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_lastlog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/lastlog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_login_events_lastlog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80384-1
  - DISA-STIG-RHEL-07-030620
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_lastlog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_tallylog
  when:
  - audit_rules_login_events_tallylog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80994-7
  - DISA-STIG-RHEL-07-030600
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_tallylog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - audit_rules_login_events_tallylog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_tallylog.matched is defined and find_tallylog.matched == 0
  tags:
  - CCE-80994-7
  - DISA-STIG-RHEL-07-030600
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_tallylog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_login_events_tallylog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_tallylog.matched is defined and find_tallylog.matched > 0
  tags:
  - CCE-80994-7
  - DISA-STIG-RHEL-07-030600
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_tallylog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the tallylog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/tallylog -p wa -k logins
    create: true
  when:
  - audit_rules_login_events_tallylog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80994-7
  - DISA-STIG-RHEL-07-030600
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_tallylog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/tallylog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_rules_login_events_tallylog | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80994-7
  - DISA-STIG-RHEL-07-030600
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.2.3
  - audit_rules_login_events_tallylog
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chage.*$
    patterns: '*.rules'
  register: find_chage
  when:
  - audit_rules_privileged_commands_chage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80398-1
  - DISA-STIG-RHEL-07-030660
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_chage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chage.matched is defined and find_chage.matched == 0
  tags:
  - CCE-80398-1
  - DISA-STIG-RHEL-07-030660
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_chage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chage.matched is defined and find_chage.matched > 0
  tags:
  - CCE-80398-1
  - DISA-STIG-RHEL-07-030660
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chage -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_chage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80398-1
  - DISA-STIG-RHEL-07-030660
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chage -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_chage | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80398-1
  - DISA-STIG-RHEL-07-030660
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chage
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chsh.*$
    patterns: '*.rules'
  register: find_chsh
  when:
  - audit_rules_privileged_commands_chsh | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80404-7
  - DISA-STIG-RHEL-07-030720
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chsh
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_chsh | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chsh.matched is defined and find_chsh.matched == 0
  tags:
  - CCE-80404-7
  - DISA-STIG-RHEL-07-030720
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chsh
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_chsh | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_chsh.matched is defined and find_chsh.matched > 0
  tags:
  - CCE-80404-7
  - DISA-STIG-RHEL-07-030720
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chsh
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chsh rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chsh -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_chsh | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80404-7
  - DISA-STIG-RHEL-07-030720
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chsh
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the chsh rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chsh -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_chsh | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80404-7
  - DISA-STIG-RHEL-07-030720
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_chsh
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when:
  - audit_rules_privileged_commands_crontab | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80410-4
  - DISA-STIG-RHEL-07-030800
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_crontab
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_crontab | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_crontab.matched is defined and find_crontab.matched == 0
  tags:
  - CCE-80410-4
  - DISA-STIG-RHEL-07-030800
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_crontab
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_crontab | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_crontab.matched is defined and find_crontab.matched > 0
  tags:
  - CCE-80410-4
  - DISA-STIG-RHEL-07-030800
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_crontab
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_crontab | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80410-4
  - DISA-STIG-RHEL-07-030800
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_crontab
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_crontab | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80410-4
  - DISA-STIG-RHEL-07-030800
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_crontab
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when:
  - audit_rules_privileged_commands_gpasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80397-3
  - DISA-STIG-RHEL-07-030650
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_gpasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_gpasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_gpasswd.matched is defined and find_gpasswd.matched == 0
  tags:
  - CCE-80397-3
  - DISA-STIG-RHEL-07-030650
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_gpasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_gpasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_gpasswd.matched is defined and find_gpasswd.matched > 0
  tags:
  - CCE-80397-3
  - DISA-STIG-RHEL-07-030650
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_gpasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_gpasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80397-3
  - DISA-STIG-RHEL-07-030650
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_gpasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_gpasswd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80397-3
  - DISA-STIG-RHEL-07-030650
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_gpasswd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when:
  - audit_rules_privileged_commands_newgrp | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80403-9
  - DISA-STIG-RHEL-07-030710
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_newgrp
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_newgrp | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_newgrp.matched is defined and find_newgrp.matched == 0
  tags:
  - CCE-80403-9
  - DISA-STIG-RHEL-07-030710
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_newgrp
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_newgrp | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_newgrp.matched is defined and find_newgrp.matched > 0
  tags:
  - CCE-80403-9
  - DISA-STIG-RHEL-07-030710
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_newgrp
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_newgrp | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80403-9
  - DISA-STIG-RHEL-07-030710
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_newgrp
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_newgrp | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80403-9
  - DISA-STIG-RHEL-07-030710
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_newgrp
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/pam_timestamp_check.*$
    patterns: '*.rules'
  register: find_pam_timestamp_check
  when:
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80411-2
  - DISA-STIG-RHEL-07-030810
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_pam_timestamp_check
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched == 0
  tags:
  - CCE-80411-2
  - DISA-STIG-RHEL-07-030810
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_pam_timestamp_check
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_pam_timestamp_check.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched > 0
  tags:
  - CCE-80411-2
  - DISA-STIG-RHEL-07-030810
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_pam_timestamp_check
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the pam_timestamp_check rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80411-2
  - DISA-STIG-RHEL-07-030810
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_pam_timestamp_check
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the pam_timestamp_check rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80411-2
  - DISA-STIG-RHEL-07-030810
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_pam_timestamp_check
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/passwd.*$
    patterns: '*.rules'
  register: find_passwd
  when:
  - audit_rules_privileged_commands_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80395-7
  - DISA-STIG-RHEL-07-030630
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_passwd.matched is defined and find_passwd.matched == 0
  tags:
  - CCE-80395-7
  - DISA-STIG-RHEL-07-030630
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_passwd.matched is defined and find_passwd.matched > 0
  tags:
  - CCE-80395-7
  - DISA-STIG-RHEL-07-030630
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the passwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/passwd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80395-7
  - DISA-STIG-RHEL-07-030630
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the passwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/passwd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_passwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80395-7
  - DISA-STIG-RHEL-07-030630
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_passwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postdrop.*$
    patterns: '*.rules'
  register: find_postdrop
  when:
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80406-2
  - DISA-STIG-RHEL-07-030760
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postdrop
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_postdrop.matched is defined and find_postdrop.matched == 0
  tags:
  - CCE-80406-2
  - DISA-STIG-RHEL-07-030760
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postdrop
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postdrop.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_postdrop.matched is defined and find_postdrop.matched > 0
  tags:
  - CCE-80406-2
  - DISA-STIG-RHEL-07-030760
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postdrop
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the postdrop rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postdrop -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80406-2
  - DISA-STIG-RHEL-07-030760
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postdrop
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the postdrop rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postdrop -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80406-2
  - DISA-STIG-RHEL-07-030760
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postdrop
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postqueue.*$
    patterns: '*.rules'
  register: find_postqueue
  when:
  - audit_rules_privileged_commands_postqueue | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80407-0
  - DISA-STIG-RHEL-07-030770
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postqueue
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_postqueue | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_postqueue.matched is defined and find_postqueue.matched == 0
  tags:
  - CCE-80407-0
  - DISA-STIG-RHEL-07-030770
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postqueue
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postqueue.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_postqueue | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_postqueue.matched is defined and find_postqueue.matched > 0
  tags:
  - CCE-80407-0
  - DISA-STIG-RHEL-07-030770
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postqueue
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the postqueue rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postqueue -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_postqueue | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80407-0
  - DISA-STIG-RHEL-07-030770
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postqueue
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the postqueue rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postqueue -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_postqueue | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80407-0
  - DISA-STIG-RHEL-07-030770
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_postqueue
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
    patterns: '*.rules'
  register: find_ssh_keysign
  when:
  - audit_rules_privileged_commands_ssh_keysign | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80408-8
  - DISA-STIG-RHEL-07-030780
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_ssh_keysign
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_ssh_keysign | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
  tags:
  - CCE-80408-8
  - DISA-STIG-RHEL-07-030780
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_ssh_keysign
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_ssh_keysign | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched > 0
  tags:
  - CCE-80408-8
  - DISA-STIG-RHEL-07-030780
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_ssh_keysign
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the ssh_keysign rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_ssh_keysign | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80408-8
  - DISA-STIG-RHEL-07-030780
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_ssh_keysign
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the ssh_keysign rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_ssh_keysign | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80408-8
  - DISA-STIG-RHEL-07-030780
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_ssh_keysign
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/su.*$
    patterns: '*.rules'
  register: find_su
  when:
  - audit_rules_privileged_commands_su | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80400-5
  - DISA-STIG-RHEL-07-030680
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_su
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_su | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_su.matched is defined and find_su.matched == 0
  tags:
  - CCE-80400-5
  - DISA-STIG-RHEL-07-030680
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_su
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_su.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_su | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_su.matched is defined and find_su.matched > 0
  tags:
  - CCE-80400-5
  - DISA-STIG-RHEL-07-030680
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_su
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the su rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/su -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_su | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80400-5
  - DISA-STIG-RHEL-07-030680
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_su
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the su rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/su -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_su | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80400-5
  - DISA-STIG-RHEL-07-030680
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_su
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudo.*$
    patterns: '*.rules'
  register: find_sudo
  when:
  - audit_rules_privileged_commands_sudo | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80401-3
  - DISA-STIG-RHEL-07-030690
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudo
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_sudo | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_sudo.matched is defined and find_sudo.matched == 0
  tags:
  - CCE-80401-3
  - DISA-STIG-RHEL-07-030690
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudo
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_sudo | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_sudo.matched is defined and find_sudo.matched > 0
  tags:
  - CCE-80401-3
  - DISA-STIG-RHEL-07-030690
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudo
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the sudo rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudo -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_sudo | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80401-3
  - DISA-STIG-RHEL-07-030690
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudo
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the sudo rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudo -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_sudo | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80401-3
  - DISA-STIG-RHEL-07-030690
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudo
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudoedit.*$
    patterns: '*.rules'
  register: find_sudoedit
  when:
  - audit_rules_privileged_commands_sudoedit | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80402-1
  - DISA-STIG-RHEL-07-030730
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudoedit
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_sudoedit | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_sudoedit.matched is defined and find_sudoedit.matched == 0
  tags:
  - CCE-80402-1
  - DISA-STIG-RHEL-07-030730
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudoedit
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_sudoedit | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_sudoedit.matched is defined and find_sudoedit.matched > 0
  tags:
  - CCE-80402-1
  - DISA-STIG-RHEL-07-030730
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudoedit
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the sudoedit rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudoedit -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_sudoedit | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80402-1
  - DISA-STIG-RHEL-07-030730
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudoedit
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the sudoedit rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudoedit -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_sudoedit | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80402-1
  - DISA-STIG-RHEL-07-030730
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_sudoedit
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when:
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80405-4
  - DISA-STIG-RHEL-07-030750
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_umount
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_umount.matched is defined and find_umount.matched == 0
  tags:
  - CCE-80405-4
  - DISA-STIG-RHEL-07-030750
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_umount
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_umount.matched is defined and find_umount.matched > 0
  tags:
  - CCE-80405-4
  - DISA-STIG-RHEL-07-030750
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_umount
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80405-4
  - DISA-STIG-RHEL-07-030750
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_umount
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80405-4
  - DISA-STIG-RHEL-07-030750
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_umount
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/unix_chkpwd.*$
    patterns: '*.rules'
  register: find_unix_chkpwd
  when:
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80396-5
  - DISA-STIG-RHEL-07-030640
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-12.1(ii)
  - NIST-800-53-AU-12.1(iv)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-3.1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(1)(a)
  - audit_rules_privileged_commands_unix_chkpwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
  tags:
  - CCE-80396-5
  - DISA-STIG-RHEL-07-030640
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-12.1(ii)
  - NIST-800-53-AU-12.1(iv)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-3.1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(1)(a)
  - audit_rules_privileged_commands_unix_chkpwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched > 0
  tags:
  - CCE-80396-5
  - DISA-STIG-RHEL-07-030640
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-12.1(ii)
  - NIST-800-53-AU-12.1(iv)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-3.1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(1)(a)
  - audit_rules_privileged_commands_unix_chkpwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the unix_chkpwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80396-5
  - DISA-STIG-RHEL-07-030640
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-12.1(ii)
  - NIST-800-53-AU-12.1(iv)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-3.1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(1)(a)
  - audit_rules_privileged_commands_unix_chkpwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the unix_chkpwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80396-5
  - DISA-STIG-RHEL-07-030640
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-12.1(ii)
  - NIST-800-53-AU-12.1(iv)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-3.1
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(1)(a)
  - audit_rules_privileged_commands_unix_chkpwd
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/userhelper.*$
    patterns: '*.rules'
  register: find_userhelper
  when:
  - audit_rules_privileged_commands_userhelper | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80399-9
  - DISA-STIG-RHEL-07-030670
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_userhelper
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - audit_rules_privileged_commands_userhelper | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_userhelper.matched is defined and find_userhelper.matched == 0
  tags:
  - CCE-80399-9
  - DISA-STIG-RHEL-07-030670
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_userhelper
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_privileged_commands_userhelper | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_userhelper.matched is defined and find_userhelper.matched > 0
  tags:
  - CCE-80399-9
  - DISA-STIG-RHEL-07-030670
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_userhelper
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the userhelper rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/userhelper -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_userhelper | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80399-9
  - DISA-STIG-RHEL-07-030670
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_userhelper
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Inserts/replaces the userhelper rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/userhelper -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - audit_rules_privileged_commands_userhelper | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80399-9
  - DISA-STIG-RHEL-07-030670
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - audit_rules_privileged_commands_userhelper
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Set architecture for audit tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_time_adjtimex | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27290-6
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_adjtimex
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for adjtimex for x86 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - adjtimex
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b32_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_time_rules.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - adjtimex
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b32_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_adjtimex | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27290-6
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_adjtimex
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for adjtimex for x86_64 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - adjtimex
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b64_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_time_rules.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - adjtimex
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b64_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_adjtimex | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch == "b64"
  tags:
  - CCE-27290-6
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_adjtimex
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Set architecture for audit tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_time_clock_settime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27219-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_clock_settime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for clock_settime for x86 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - clock_settime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b32_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key time-change
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)time-change$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/time-change.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - clock_settime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b32_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_clock_settime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27219-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_clock_settime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for clock_settime for x86_64 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - clock_settime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b64_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key time-change
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)time-change$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/time-change.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - clock_settime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b64_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_clock_settime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch == "b64"
  tags:
  - CCE-27219-5
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_clock_settime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Set architecture for audit tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - audit_rules_time_settimeofday | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27216-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_settimeofday
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for settimeofday for x86 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - settimeofday
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b32_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_time_rules.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - settimeofday
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b32_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_settimeofday | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27216-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_settimeofday
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for settimeofday for x86_64 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - settimeofday
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b64_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_time_rules.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - settimeofday
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b64_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b64"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_settimeofday | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - audit_arch == "b64"
  tags:
  - CCE-27216-1
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_settimeofday
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Perform remediation of Audit rules for stime syscall for x86 platform
  block:
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - stime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
    find:
      paths: /etc/audit/rules.d
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: '*.rules'
    register: audit_syscalls_found_b32_rules_d
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
    set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
      }}"
  - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
    find:
      paths: /etc/audit/rules.d
      contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
      patterns: '*.rules'
    register: find_syscalls_files
  - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
    set_fact:
      all_files:
      - /etc/audit/rules.d/audit_time_rules.rules
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched == 0
  - name: Use matched file as the recipient for the rule
    set_fact:
      all_files:
      - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first }}'
    when: find_syscalls_files.matched is defined and find_syscalls_files.matched > 0
  - name: Insert the syscall rule in {{ all_files[0] }}
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in {{ all_files[0] }}
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls
  - name: Declare list of syscals
    set_fact:
      syscalls:
      - stime
  - name: Declare number of syscalls
    set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"
  - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
    find:
      paths: /etc/audit
      contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{ item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
      patterns: audit.rules
    register: audit_syscalls_found_b32_audit_rules
    loop: '{{ syscalls }}'
  - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
    set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
      }}"
  - name: Insert the syscall rule in /etc/audit/audit.rules
    block:
    - name: 'Construct rule: add rule list, action and arch'
      set_fact: tmpline="-a always,exit -F arch=b32"
    - name: 'Construct rule: add syscalls'
      set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
      loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
      when: item.matched is defined and item.matched == 0
    - name: 'Construct rule: add fields and key'
      set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"
    - name: Insert the line in /etc/audit/audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '{{ tmpline }}'
        create: true
        state: present
    when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
  when:
  - audit_rules_time_stime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27299-7
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_stime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/localtime already exists in /etc/audit/rules.d/
  find:
    paths: /etc/audit/rules.d
    contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
    patterns: '*.rules'
  register: find_existing_watch_rules_d
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Search /etc/audit/rules.d for other rules with specified key audit_time_rules
  find:
    paths: /etc/audit/rules.d
    contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
    patterns: '*.rules'
  register: find_watch_key
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/audit_time_rules.rules
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched is defined and
    find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/localtime in /etc/audit/rules.d/
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/localtime -p wa -k audit_time_rules
    create: true
    mode: '0640'
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched == 0
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Check if watch rule for /etc/localtime already exists in /etc/audit/audit.rules
  find:
    paths: /etc/audit/
    contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
    patterns: audit.rules
  register: find_existing_watch_audit_rules
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Add watch rule for /etc/localtime in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/localtime -p wa -k audit_time_rules
    state: present
    dest: /etc/audit/audit.rules
    create: true
    mode: '0640'
  when:
  - audit_rules_time_watch_localtime | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched == 0
  tags:
  - CCE-27310-2
  - CJIS-5.4.1.1
  - NIST-800-171-3.1.7
  - NIST-800-53-AC-6(9)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.4.2.b
  - audit_rules_time_watch_localtime
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: enable syslog plugin
  lineinfile:
    dest: /etc/audisp/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
    create: true
  when:
  - auditd_audispd_syslog_plugin_activated | bool
  - configure_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27341-7
  - CJIS-5.4.1.1
  - NIST-800-171-3.3.1
  - NIST-800-53-AU-4(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-10.5.3
  - auditd_audispd_syslog_plugin_activated
  - configure_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
    create: true
  when:
  - auditd_data_retention_flush | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27331-8
  - NIST-800-171-3.3.1
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - auditd_data_retention_flush
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - configure_strategy | bool
  - file_groupowner_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82023-3
  - CJIS-5.5.2.2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-7.1
  - configure_strategy
  - file_groupowner_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Ensure group owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    group: '0'
  when:
  - configure_strategy | bool
  - file_groupowner_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - file_exists.stat is defined and file_exists.stat.exists
  tags:
  - CCE-82023-3
  - CJIS-5.5.2.2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-7.1
  - configure_strategy
  - file_groupowner_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - configure_strategy | bool
  - file_owner_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82026-6
  - CJIS-5.5.2.2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-7.1
  - configure_strategy
  - file_owner_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Ensure owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    owner: '0'
  when:
  - configure_strategy | bool
  - file_owner_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - file_exists.stat is defined and file_exists.stat.exists
  tags:
  - CCE-82026-6
  - CJIS-5.5.2.2
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - PCI-DSS-Req-7.1
  - configure_strategy
  - file_owner_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - configure_strategy | bool
  - file_permissions_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82039-9
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - configure_strategy
  - file_permissions_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Ensure permission 0600 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    mode: '0600'
  when:
  - configure_strategy | bool
  - file_permissions_grub2_cfg | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - file_exists.stat is defined and file_exists.stat.exists
  tags:
  - CCE-82039-9
  - NIST-800-171-3.4.5
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - configure_strategy
  - file_permissions_grub2_cfg
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed

- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - rsyslog_remote_loghost | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27343-3
  - DISA-STIG-RHEL-07-031000
  - NIST-800-53-AU-4(1)
  - NIST-800-53-AU-9(2)
  - NIST-800-53-CM-6(a)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - rsyslog_remote_loghost

- name: Disable service autofs
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service autofs
    systemd:
      name: autofs.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"autofs.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27498-5
  - DISA-STIG-RHEL-07-020110
  - NIST-800-171-3.4.6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-MP-7
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_autofs_disabled

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27498-5
  - DISA-STIG-RHEL-07-020110
  - NIST-800-171-3.4.6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-MP-7
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_autofs_disabled

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27498-5
  - DISA-STIG-RHEL-07-020110
  - NIST-800-171-3.4.6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-MP-7
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_autofs_disabled

- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/usb-storage.conf
    regexp: usb-storage
    line: install usb-storage /bin/true
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27277-3
  - DISA-STIG-RHEL-07-020100
  - NIST-800-171-3.1.21
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-MP-7
  - disable_strategy
  - kernel_module_usb-storage_disabled
  - low_complexity
  - medium_disruption
  - medium_severity
  - reboot_required

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - sysctl_kernel_dmesg_restrict | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27050-4
  - NIST-800-171-3.1.5
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)
  - disable_strategy
  - low_complexity
  - medium_disruption
  - medium_severity
  - reboot_required
  - sysctl_kernel_dmesg_restrict

- name: Ensure sysctl fs.suid_dumpable is set to 0
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: true
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - sysctl_fs_suid_dumpable | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-26900-1
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)
  - disable_strategy
  - low_complexity
  - medium_disruption
  - medium_severity
  - reboot_required
  - sysctl_fs_suid_dumpable

- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: true
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - medium_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - sysctl_kernel_randomize_va_space | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27127-0
  - DISA-STIG-RHEL-07-040201
  - NIST-800-171-3.1.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-30
  - NIST-800-53-SC-30(2)
  - disable_strategy
  - low_complexity
  - medium_disruption
  - medium_severity
  - reboot_required
  - sysctl_kernel_randomize_va_space

- name: Find /etc/grub.d/ files
  find:
    paths:
    - /etc/grub.d/
    follow: true
  register: grub
  when:
  - grub2_enable_selinux | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-26961-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - grub2_enable_selinux
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Ensure SELinux Not Disabled in grub files
  replace:
    dest: '{{ item.path }}'
    regexp: (selinux|enforcing)=0
  with_items:
  - '{{ grub.files }}'
  - path: /etc/grub2.cfg
  - path: /etc/default/grub
  when:
  - grub2_enable_selinux | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-26961-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - grub2_enable_selinux
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Configure SELinux Policy
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/selinux/config
      create: false
      regexp: ^SELINUXTYPE=
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/selinux/config
    lineinfile:
      path: /etc/selinux/config
      create: false
      regexp: ^SELINUXTYPE=
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/selinux/config
    lineinfile:
      path: /etc/selinux/config
      create: true
      regexp: ^SELINUXTYPE=
      line: SELINUXTYPE={{ var_selinux_policy_name }}
      state: present
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - selinux_policytype | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27279-9
  - DISA-STIG-RHEL-07-020220
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - low_complexity
  - low_disruption
  - medium_severity
  - reboot_required
  - restrict_strategy
  - selinux_policytype

- name: Ensure SELinux State is Enforcing
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/selinux/config
      create: false
      regexp: ^SELINUX=
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/selinux/config
    lineinfile:
      path: /etc/selinux/config
      create: false
      regexp: ^SELINUX=
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/selinux/config
    lineinfile:
      path: /etc/selinux/config
      create: true
      regexp: ^SELINUX=
      line: SELINUX={{ var_selinux_state }}
      state: present
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - selinux_state | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27334-2
  - DISA-STIG-RHEL-07-020210
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - selinux_state

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execheap | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82312-0
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execheap

- name: Set SELinux boolean selinuxuser_execheap accordingly
  seboolean:
    name: selinuxuser_execheap
    state: '{{ var_selinuxuser_execheap }}'
    persistent: true
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execheap | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82312-0
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execheap

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execmod | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82313-8
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execmod

- name: Set SELinux boolean selinuxuser_execmod accordingly
  seboolean:
    name: selinuxuser_execmod
    state: '{{ var_selinuxuser_execmod }}'
    persistent: true
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execmod | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82313-8
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execmod

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execstack | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82314-6
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execstack

- name: Set SELinux boolean selinuxuser_execstack accordingly
  seboolean:
    name: selinuxuser_execstack
    state: '{{ var_selinuxuser_execstack }}'
    persistent: true
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - sebool_selinuxuser_execstack | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-82314-6
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - sebool_selinuxuser_execstack

- name: Disable service kdump
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service kdump
    systemd:
      name: kdump.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"kdump.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80258-7
  - DISA-STIG-RHEL-07-021300
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_kdump_disabled

- name: Unit Socket Exists - kdump.socket
  command: systemctl list-unit-files kdump.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80258-7
  - DISA-STIG-RHEL-07-021300
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_kdump_disabled

- name: Disable socket kdump
  systemd:
    name: kdump.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-80258-7
  - DISA-STIG-RHEL-07-021300
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_kdump_disabled

- name: Enable service crond
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service crond
    service:
      name: crond
      enabled: 'yes'
      state: started
      masked: 'no'
    when:
    - '"cronie" in ansible_facts.packages'
  when:
  - enable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_crond_enabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27323-5
  - NIST-800-53-CM-6(a)
  - enable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_crond_enabled

- name: Ensure xinetd is removed
  package:
    name: xinetd
    state: absent
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - package_xinetd_removed | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27354-0
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - low_severity
  - no_reboot_needed
  - package_xinetd_removed

- name: Disable service xinetd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service xinetd
    systemd:
      name: xinetd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"xinetd.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_xinetd_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27443-1
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_xinetd_disabled

- name: Unit Socket Exists - xinetd.socket
  command: systemctl list-unit-files xinetd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_xinetd_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27443-1
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_xinetd_disabled

- name: Disable socket xinetd
  systemd:
    name: xinetd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_xinetd_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27443-1
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_xinetd_disabled

- name: Ensure ypbind is removed
  package:
    name: ypbind
    state: absent
  tags:
  - CCE-27396-1
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - package_ypbind_removed
  - unknown_severity
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - package_ypbind_removed | bool
  - unknown_severity | bool

- name: Ensure ypserv is removed
  package:
    name: ypserv
    state: absent
  tags:
  - CCE-27399-5
  - DISA-STIG-RHEL-07-020010
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - package_ypserv_removed
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - package_ypserv_removed | bool

- name: Disable service ypbind
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service ypbind
    systemd:
      name: ypbind.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"ypbind.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_ypbind_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27385-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_ypbind_disabled

- name: Unit Socket Exists - ypbind.socket
  command: systemctl list-unit-files ypbind.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_ypbind_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27385-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_ypbind_disabled

- name: Disable socket ypbind
  systemd:
    name: ypbind.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_ypbind_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"ypbind.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27385-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_ypbind_disabled

- name: Ensure rsh-server is removed
  package:
    name: rsh-server
    state: absent
  tags:
  - CCE-27342-5
  - DISA-STIG-RHEL-07-020000
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - package_rsh-server_removed
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool

- name: Ensure rsh is removed
  package:
    name: rsh
    state: absent
  tags:
  - CCE-27274-0
  - NIST-800-171-3.1.13
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - package_rsh_removed
  - unknown_severity
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - package_rsh_removed | bool
  - unknown_severity | bool

- name: Disable service rexec
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rexec
    systemd:
      name: rexec.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rexec.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27408-4
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rexec_disabled

- name: Unit Socket Exists - rexec.socket
  command: systemctl list-unit-files rexec.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27408-4
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rexec_disabled

- name: Disable socket rexec
  systemd:
    name: rexec.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"rexec.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27408-4
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rexec_disabled

- name: Disable service rlogin
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rlogin
    systemd:
      name: rlogin.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rlogin.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rlogin_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27336-7
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rlogin_disabled

- name: Unit Socket Exists - rlogin.socket
  command: systemctl list-unit-files rlogin.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rlogin_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27336-7
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rlogin_disabled

- name: Disable socket rlogin
  systemd:
    name: rlogin.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rlogin_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"rlogin.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27336-7
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rlogin_disabled

- name: Disable service rsh
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rsh
    systemd:
      name: rsh.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rsh.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rsh_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27337-5
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rsh_disabled

- name: Unit Socket Exists - rsh.socket
  command: systemctl list-unit-files rsh.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rsh_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27337-5
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rsh_disabled

- name: Disable socket rsh
  systemd:
    name: rsh.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_rsh_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"rsh.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27337-5
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_rsh_disabled

- block:
  - name: Detect shosts.equiv Files on the System
    find:
      paths: /
      recurse: true
      patterns: shosts.equiv
    check_mode: false
    register: shosts_equiv_locations
  - name: Remove Rsh Trust Files
    file:
      path: '{{ item.path }}'
      state: absent
    with_items: '{{ shosts_equiv_locations.files }}'
    when: shosts_equiv_locations
  tags:
  - CCE-27406-8
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - no_rsh_trust_files
  - restrict_strategy
  when:
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - no_rsh_trust_files | bool
  - restrict_strategy | bool

- name: Ensure talk-server is removed
  package:
    name: talk-server
    state: absent
  tags:
  - CCE-27210-4
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - package_talk-server_removed
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool

- name: Ensure talk is removed
  package:
    name: talk
    state: absent
  tags:
  - CCE-27432-4
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - package_talk_removed
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - package_talk_removed | bool

- name: Ensure telnet-server is removed
  package:
    name: telnet-server
    state: absent
  tags:
  - CCE-27165-0
  - DISA-STIG-RHEL-07-021710
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - package_telnet-server_removed
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool

- name: Ensure telnet is removed
  package:
    name: telnet
    state: absent
  tags:
  - CCE-27305-2
  - NIST-800-171-3.1.13
  - disable_strategy
  - low_complexity
  - low_disruption
  - low_severity
  - no_reboot_needed
  - package_telnet_removed
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - low_severity | bool
  - no_reboot_needed | bool
  - package_telnet_removed | bool

- name: Disable service telnet
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service telnet
    systemd:
      name: telnet.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"telnet.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_telnet_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27401-9
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_telnet_disabled

- name: Unit Socket Exists - telnet.socket
  command: systemctl list-unit-files telnet.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_telnet_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27401-9
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_telnet_disabled

- name: Disable socket telnet
  systemd:
    name: telnet.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - service_telnet_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27401-9
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-5(1)(c)
  - disable_strategy
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_telnet_disabled

- name: Disable service zebra
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service zebra
    systemd:
      name: zebra.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"zebra.service" in ansible_facts.services'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_zebra_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27191-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_zebra_disabled

- name: Unit Socket Exists - zebra.socket
  command: systemctl list-unit-files zebra.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_zebra_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27191-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_zebra_disabled

- name: Disable socket zebra
  systemd:
    name: zebra.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - disable_strategy | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - service_zebra_disabled | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-27191-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_strategy
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - service_zebra_disabled

- name: Disable Host-Based Authentication
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*HostbasedAuthentication\s+
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - disable_host_auth | bool
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27413-4
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010470
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-3
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - disable_host_auth
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy

- name: Allow Only SSH Protocol 2
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Protocol\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Protocol\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*Protocol\s+
      line: Protocol 2
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_allow_only_protocol2 | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27320-1
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040390
  - NIST-800-171-3.1.13
  - NIST-800-171-3.5.4
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-13
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - restrict_strategy
  - sshd_allow_only_protocol2

- name: Disable Compression Or Set Compression to delayed
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Compression\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Compression\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*Compression\s+
      line: Compression {{ var_sshd_disable_compression }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_compression | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80224-9
  - DISA-STIG-RHEL-07-040470
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_compression

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - high_severity | bool
  - low_complexity | bool
  - low_disruption | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27471-2
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010300
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - high_severity
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_empty_passwords

- name: Disable GSSAPI Authentication
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      line: GSSAPIAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_gssapi_auth | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80220-7
  - DISA-STIG-RHEL-07-040430
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_gssapi_auth

- name: Disable Kerberos Authentication
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*KerberosAuthentication\s+
      line: KerberosAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_kerb_auth | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80221-5
  - DISA-STIG-RHEL-07-040440
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_kerb_auth

- name: Disable SSH Support for Rhosts RSA Authentication
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*RhostsRSAAuthentication\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*RhostsRSAAuthentication\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*RhostsRSAAuthentication\s+
      line: RhostsRSAAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_rhosts_rsa | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80373-4
  - DISA-STIG-RHEL-07-040330
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_rhosts_rsa

- name: Disable SSH Root Login
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*PermitRootLogin\s+
      line: PermitRootLogin no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_root_login | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27445-6
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040370
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - NIST-800-53-
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-6(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_disable_root_login

- name: Do Not Allow SSH Environment Options
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitUserEnvironment\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitUserEnvironment\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*PermitUserEnvironment\s+
      line: PermitUserEnvironment no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_do_not_permit_user_env | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27363-1
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010460
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_do_not_permit_user_env

- name: Enable Use of Strict Mode Checking
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*StrictModes\s+
      line: StrictModes yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_enable_strictmodes | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80222-3
  - DISA-STIG-RHEL-07-040450
  - NIST-800-171-3.1.12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_enable_strictmodes

- name: Enable SSH Warning Banner
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*Banner\s+
      line: Banner /etc/issue
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_enable_warning_banner | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27314-4
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040170
  - NIST-800-171-3.1.9
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-53-CM-6(a)
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_enable_warning_banner

- name: Set SSH Client Alive Count Max to zero
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*ClientAliveCountMax\s+
      line: ClientAliveCountMax 0
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_set_keepalive_0 | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-83399-6
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040340
  - NIST-800-171-3.1.11
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-2(5)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SC-10
  - PCI-DSS-Req-8.1.8
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_set_keepalive_0

- name: Use Only FIPS 140-2 Validated Ciphers
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Ciphers\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Ciphers\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*Ciphers\s+
      line: Ciphers {{ sshd_approved_ciphers }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_use_approved_ciphers | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27295-5
  - CJIS-5.5.6
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SC-13
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_use_approved_ciphers

- name: Use Only FIPS 140-2 Validated MACs
  block:
  - name: Check for duplicate values
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*MACs\s+
      state: absent
    check_mode: true
    changed_when: false
    register: dupes
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*MACs\s+
      state: absent
    when: dupes.found is defined and dupes.found > 1
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      regexp: (?i)^\s*MACs\s+
      line: MACs {{ sshd_approved_macs }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - low_complexity | bool
  - low_disruption | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_use_approved_macs | bool
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-27455-5
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  - NIST-800-53-SC-13
  - low_complexity
  - low_disruption
  - medium_severity
  - no_reboot_needed
  - restrict_strategy
  - sshd_use_approved_macs
